[env] ## tells cargo make that we're in the context of a Cargo workspace
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[config] ## we want most/all of our tasks to run in the context of a workspace
default_to_workspace = false


[tasks.dev-api]
install_crate = "cargo-watch"
cwd = "./crates/perroute-api"
command = "cargo"
args = ["watch", "-x", "clippy", "-x", "run | bunyan"]
dependencies = ["db-reset"]

[tasks.dev-events-pooling]
install_crate = "cargo-watch"
cwd = "./crates/perroute-events-pooling"
command = "cargo"
args = ["watch", "-x", "run | bunyan"]
dependencies = ["db-reset"]


[tasks.db-reset]
install_crate = "sqlx-cli"
cwd = "./crates/perroute-storage"
command = "sqlx"
args = ["database", "reset"]
dependencies = ["postgres"]


[tasks.migration]
install_crate = "sqlx-cli"
cwd = "./crates/perroute-storage"
command = "sqlx"
args = ["migrate", "run"]
dependencies = ["postgres"]


[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build]
command = "cargo"
args = ["build"]
dependencies = ["clean"]

[tasks.test]
command = "cargo"
args = ["test"]
dependencies = ["clean"]

[tasks.fix]
command = "cargo"
args = ["fix", "--allow-dirty"]

[tasks.lint]
command = "cargo"
args = ["clippy"]

[tasks.my-flow]
dependencies = ["format", "build", "test"]

## docker
[tasks.postgres]
command = "docker"
args = [
    "compose",
    "-f",
    "./deploy/docker-compose.postgres.yml",
    "up",
    "--build",
    "--detach",
]


[tasks.docker]
command = "docker"
args = [
    "compose",
    "-f",
    "./deploy/docker-compose.postgres.yml",
    "-f",
    "./deploy/docker-compose.perroute-api.yml",
    "up",
    "--build",
]

[tasks.docker-build]
command = "docker"
args = [
    "compose",
    "-f",
    "./deploy/docker-compose.postgres.yml",
    "-f",
    "./deploy/docker-compose.perroute-api.yml",
    "build",
]

[tasks.docker-start]
command = "docker"
args = [
    "compose",
    "-f",
    "./deploy/docker-compose.postgres.yml",
    "-f",
    "./deploy/docker-compose.perroute-api.yml",
    "start",
]

[tasks.docker-stop]
command = "docker"
args = [
    "compose",
    "-f",
    "./deploy/docker-compose.postgres.yml",
    "-f",
    "./deploy/docker-compose.perroute-api.yml",
    "stop",
]

[tasks.docker-rm]
command = "docker"
args = [
    "compose",
    "-f",
    "./deploy/docker-compose.postgres.yml",
    "-f",
    "./deploy/docker-compose.perroute-api.yml",
    "rm",
]
